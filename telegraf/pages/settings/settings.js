const Markup = require('telegraf/markup');
const { saveUser } = require('../../../src/database/usersCollection');
const deleteLastMessage = require('../../deleteLastMessage');

const Composer = require('telegraf/composer')
const settings = new Composer();

settings.hears(/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/i,async (ctx) => {
	let keyboard = createKeyboard(ctx);

	await ctx.replyWithMarkdown(
		`*‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏*\n\n_${keyboard.length ? '–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å' : '–°–ø–µ—Ä–≤–∞ –¥–æ–±–∞–≤—å –≥—Ä—É–ø–ø—É –∏–ª–∏ –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ —á—Ç–æ-—Ç–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å üòå'}_`,
		Markup.inlineKeyboard(keyboard).extra()
	).then(msg => deleteLastMessage(ctx, msg.message_id));
});

settings.action(/settings-/, async (ctx) => {
	const data = ctx.callbackQuery.data;
	let alertText = '–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã';

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–æ–π inline –∫–Ω–æ–ø–∫–∏
	switch (data) {
		case 'settings-scheduleChangeNotif':
			if (ctx.session.user.notifications.scheduleChange) {
				ctx.session.user.notifications.scheduleChange = false;
				alertText = '–ë–æ—Ç –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è';
			} else {
				ctx.session.user.notifications.scheduleChange = true;
				alertText = '–ë–æ—Ç –±—É–¥–µ—Ç —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è';
			}
			break;
		case 'settings-balanceChangeNotif':
			if (ctx.session.user.notifications.balanceChange) {
				ctx.session.user.notifications.balanceChange = false;
				alertText = '–ë–æ—Ç –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞';
			} else {
				ctx.session.user.notifications.balanceChange = true;
				alertText = '–ë–æ—Ç –±—É–¥–µ—Ç —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞';
			}
			break;
		case 'settings-dayScheduleNotif':
			if (ctx.session.user.notifications.daySchedule) {
				ctx.session.user.notifications.daySchedule = false;
				alertText = 'üíî –ë–æ—Ç –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å';
			} else {
				ctx.session.user.notifications.daySchedule = true;
				alertText = '–ë–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å';
			}
			break;
		case 'settings-changeMyGroup':
			if (ctx.session.lastMessageId) ctx.deleteMessage(ctx.session.lastMessageId);
			delete ctx.session.lastMessageId;
			return ctx.scene.enter('selectGroup');
		case 'settings-changeBalance':
			if (ctx.session.lastMessageId) ctx.deleteMessage(ctx.session.lastMessageId);
			delete ctx.session.lastMessageId;
			return ctx.scene.enter('addBalance');
	}

	saveUser(ctx.session.user);


	try {
		// –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
		await ctx.editMessageReplyMarkup({
			inline_keyboard: createKeyboard(ctx)
		});
	} catch (e) {
		// –ü—Ä–æ–∏–∑–æ–π–¥–µ—Ç –æ—à–∏–±–∫–∞, –µ—Å–ª–∏ –Ω–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–¥–µ–Ω—Ç–∏—á–Ω–∞ —Å—Ç–∞—Ä–æ–π
		// console.log(e);
	} finally {
		// –í—ã–≤–æ–¥ –∞–ª–µ—Ä—Ç–∞ —Å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏
		await ctx.answerCbQuery(alertText, true);
	}
});

function createKeyboard(ctx) {
	let keyboard = [];

	// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
	let notif = ctx.session.user.notifications;
	if (notif) {
		if (notif.scheduleChange != null)
			keyboard.push( [Markup.callbackButton(`${notif.scheduleChange ? 'üîî' : 'üîï'} –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è`, 'settings-scheduleChangeNotif')] );
		if (notif.balanceChange != null)
			keyboard.push( [Markup.callbackButton(`${notif.balanceChange ? 'üîî' : 'üîï'} –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞`, 'settings-balanceChangeNotif')] );
		if (notif.daySchedule != null)
			keyboard.push( [Markup.callbackButton(`${notif.daySchedule ? 'üîî' : 'üîï'} –ü—Ä–∏—Å—ã–ª–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å`, 'settings-dayScheduleNotif')] );
	}

	// –ò–∑–º–µ–Ω–∏—Ç—å –º–æ—é –≥—Ä—É–ø–ø—É
	let user = ctx.session.user;
	if (user.myGroup.group)
		keyboard.push( [Markup.callbackButton(`üìù –ò–∑–º–µ–Ω–∏—Ç—å –º–æ—é –≥—Ä—É–ø–ø—É`, 'settings-changeMyGroup')] );

	// –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞
	if (user.balance && user.balance.number)
		keyboard.push( [Markup.callbackButton(`üìù –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞`, 'settings-changeBalance')] );

	return keyboard;
}

module.exports = settings;