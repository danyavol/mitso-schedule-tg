/** –°—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å —Å–∞–π—Ç–∞ –ú–ò–¢–°–û
 *
 *
 */
const { longToShortDate, getDate } = require('../../components/time');

module.exports = (groups) => {
	for (let i = groups.length-1; i >= 0; i--) {
		// –ï—Å–ª–∏ –Ω–µ—Ç—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–∞–π—Ç–µ –ú–ò–¢–°–û - —É–¥–∞–ª—è–µ–º –≥—Ä—É–ø–ø—É
		if (!groups[i].mitsoSch.length) { groups.splice(i, 1); continue; }

		// –ü–µ—Ä–µ–±–æ—Ä –Ω–µ–¥–µ–ª—å
		let newWeeksCounter = 0;
		groups[i].changes = [];
		for (let j = groups[i].mitsoSch.length-1; j >= 0; j--) {
			let flag = true;
			for (let k = groups[i].dbSch.length-1; k >= 0; k--) {
				// –ù—É–∂–Ω—ã–µ –Ω–µ–¥–µ–ª–∏ –Ω–∞–π–¥–µ–Ω—ã
				if (groups[i].mitsoSch[j][0] && groups[i].dbSch[k][0] && 
					groups[i].mitsoSch[j][0].week.split('-')[0] === groups[i].dbSch[k][0].week.split('-')[0]) {
					// –£–¥–∞–ª—è–µ–º –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è
					let result = compareTwoWeeks(groups[i].mitsoSch[j], groups[i].dbSch[k]);
					// –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è - –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ groups[i].changes
					if (result.added.length || result.deleted.length) groups[i].changes.push(result);

					flag = false;
					break;
				}

			}
			if (flag) {
				newWeeksCounter++;
				groups[i].changes.push({ week: groups[i].mitsoSch[j][0].week })
			}
		}

		// –ü–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ –Ω–µ–¥–µ–ª–∏
		if (newWeeksCounter) {
			groups[i].msg = `üî• –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ ${groups[i].group} –æ–±–Ω–æ–≤–∏–ª–æ—Å—å!\n\n–ù–æ–≤—ã—Ö –Ω–µ–¥–µ–ª—å –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ - ${newWeeksCounter}`;
			continue;
		}

		// –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–∫–∞–∑–∞–ª–æ—Å—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º
		if (!groups[i].changes.length) {
			groups.splice(i, 1);
			continue;
		}

		// –ï—Å–ª–∏ –∫–æ–¥ –¥–æ—à–µ–ª –¥–æ —Å—é–¥–∞ - –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ—Å—Ç—å, —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
		groups[i].msg = createChangeMessage(groups[i].group, groups[i].changes);


	}
};

// –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ú–ò–¢–°–û –∏ –ë–î –æ–¥–Ω–æ–π –Ω–µ–¥–µ–ª–∏
function compareTwoWeeks(mitsoWeek, dbWeek) {
	let added = JSON.parse(JSON.stringify(mitsoWeek)),
		deleted = JSON.parse(JSON.stringify(dbWeek));

	for (let i = added.length-1; i >= 0; i--) {
		for (let j = deleted.length-1; j >= 0; j--) {
			if (added[i].date === deleted[j].date
				&& added[i].time === deleted[j].time
				&& added[i].lessonName === deleted[j].lessonName
				&& added[i].lessonType === deleted[j].lessonType) {

				added.splice(i, 1);
				deleted.splice(j, 1);
				break;
			}
		}
	}
	return {week: mitsoWeek[0].week, added: added, deleted: deleted};
}

// –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏
function createChangeMessage(groupName, changes) {
	let msg = `üî• –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ ${groupName} –æ–±–Ω–æ–≤–∏–ª–æ—Å—å!`;
	for (let week of changes) {
		msg += `\n\nüìù –ò–∑–º–µ–Ω–µ–Ω–∏—è ${week.week}:`;

		// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ–¥–µ–ª–∏ –ø–æ –¥–Ω—è–º
		let days = [];
		createDays(week.added, 'added', days);
		createDays(week.deleted, 'deleted', days);

		function createDays(obj, field, days) {
			for (let lesson of obj) {
				let flag = true;
				for (let i = 0; i < days.length; i++) {
					if (lesson.date === days[i].date) {
						if (!days[i][field]) days[i][field] = [];
						days[i][field].push(lesson);
						flag = false;
					}
				}
				if (flag) {
					days.push({date: lesson.date, dayOfWeek: lesson.day});
					days[days.length-1][field] = [lesson];
				}
			}
		}

		// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–Ω–µ–π
		days.sort((a, b) => getDate(a.date) - getDate(b.date))

		// –í—ã–≤–æ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ –¥–Ω—è–º
		for (let day of days) {
			msg += `\n\nüìç ${day.dayOfWeek}, ${longToShortDate(day.date)}`;
			if (day.deleted)
				for (let lesson of day.deleted) {
					msg += `\n‚ûñ ${lesson.time.split('-')[0]} ‚ïë ${lesson.classRoom} ‚ïë ${lesson.lessonName} (${lesson.lessonType}) ‚îÇ ${lesson.teachers.join(', ')}`;
				}
			if (day.added)
				for (let lesson of day.added) {
					msg += `\n‚ûï ${lesson.time.split('-')[0]} ‚ïë ${lesson.classRoom} ‚ïë ${lesson.lessonName} (${lesson.lessonType}) ‚îÇ ${lesson.teachers.join(', ')}`
				}
		}

	}
	return msg;
}