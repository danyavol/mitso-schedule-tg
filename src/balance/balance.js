const axios = require('axios');
const FormData = require('form-data');
const https = require('https');
const httpsAgent =  new https.Agent({
	rejectUnauthorized: false,

});

const cheerio = require('cheerio');

module.exports.getUserBalance = async (pass) => {
	let result;
	let form = new FormData();
	form.append('login', pass);
	form.append('password', pass);
	await axios.post(
		'https://student.mitso.by/login_stud.php',
		form,
		{
			httpsAgent,
			headers: form.getHeaders()
		})
		.then((response) => {
			result = getBalanceFromHtml(response.data, pass);
		})
		.catch((err) => {
			console.log('Error sending balance request to MITSO', err)
			result = getBalanceFromHtml(err, pass, true);
		});
	return result;
}

/** –ü–æ–∏—Å–∫ –±–∞–ª–∞–Ω—Å–∞ –≤ html –¥–æ–∫—É–º–µ–Ω—Ç–µ */
function getBalanceFromHtml(html, pass, ifError=false) {
	/**
	 * text: —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	 * data: –æ–±—ä–µ–∫—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –±–¥
	 * error: true –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å
	 * */
	let result = {
		text: 'üí∏ ',
		data: {
			number: pass
		},
		error: false
	};

	// –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å
	if (ifError) {
		result.text = '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–∞–π—Ç –ú–ò–¢–°–û.';
		result.error = true;
		return result;
	}

	try {
		const $ = cheerio.load(html);

		// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∞ –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞
		if ($('#container').length === 0) {
			result.text = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –±–∞–ª–∞–Ω—Å–µ.';
			$('p').each(function (i, elem) {
				if ( $( this ).text().match(/–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞/) ) {
					result.text = '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞.'
				}
			})
			result.error = true;
			return result;
		}

		// –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Ö

		let s = $('#what_section b');
		if (s) result.text += norm(s.text()) + '\n\n';
		s = $('#topsection #title');
		if (s) result.text += s.text() + '\n';
		s = $('#topsection .topmenu');
		if (s) result.text += norm(s.text()) + '\n\n';

		s = $('#middle_section .content_text table td:nth-child(2)');
		if (s) {
			for (let i = 0; i < 3; i++) {
				if (!s.eq(i).text()) {
					s.eq(i).text('???');
				} else {
					switch(i) {
						case 0:
							result.data.balance = s.eq(0).text();
							break;
						case 1:
							result.data.dolg = s.eq(1).text();
							break;
						case 2:
							result.data.penia = s.eq(2).text();
							break;
					}
				}
			}
			result.text += `–ë–∞–ª–∞–Ωc: ${s.eq(0).text()}\n–û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–ª–≥: ${s.eq(1).text()}\n–ü–µ–Ω—è: ${s.eq(2).text()}`
		}
	} catch (e) {
		console.log(e);
		result.text = '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –±–∞–ª–∞–Ω—Å–µ.';
		result.error = true;
	}
	return result;

	// –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∫—Ä–∏–≤—ã—Ö —Å—Ç—Ä–æ–∫ —Å –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–º–∏ –ø—Ä–æ–±–µ–ª–∞–º–∏
	function norm(str) {
		return str.replace(/\n/g, ' ').replace(/\t/g, '').trim();
	}
}